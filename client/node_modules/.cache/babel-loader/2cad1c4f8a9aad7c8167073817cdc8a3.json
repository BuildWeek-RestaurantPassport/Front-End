{"ast":null,"code":"import _objectSpread from \"/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { login } from '../components/actions';\n\nfunction Login(props) {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        creds = _useState2[0],\n        setCreds = _useState2[1];\n\n  const handleChange = e => {\n    setCreds(_objectSpread({}, creds, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    props.login(creds, props.history);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\",\n    value: creds.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\",\n    value: creds.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" Log In \")));\n}\n\nconst mapStateToProps = state => ({\n  loginError: state.loginError\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(withRouter(Login));\n/*import React, { useState, useEffect } from 'react'\nimport * as Yup from 'yup'\nimport { Link } from 'react-router-dom'\nimport { Button, Grid } from 'semantic-ui-react'\nimport { Form, Field, withFormik } from 'formik'\n\n\nconst LogIn = ({ errors, touched, status, history }) => {\n\n\n\n  const registerLink = (\n    <Link to='/register' className='register-link'>Register</Link>\n  )\n  return (\n    <>\n      <div className=\"login-container\">\n        <Grid className=\"log-in-form\">\n          <Grid.Column>\n            <h1>Login</h1>\n            <Grid.Column>\n              <Form>\n                <Field\n                  component='input'\n                  type='text'\n                  name='username'\n                  placeholder='User Name'\n                />\n                {touched.username && errors.username && <p className='error'>{errors.username}</p>}\n                <Field\n                  component='input'\n                  type='password'\n                  name='password'\n                  placeholder='Password'\n                />\n                {touched.password && errors.password && <p className='error'>{errors.password}</p>}\n\n                <Button type='submit' content='Login' />\n\n              </Form>\n            </Grid.Column>\n            <p> {registerLink} </p>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nconst LoginPage = withFormik({\n  mapPropsToValues({ username, password }) {\n    return {\n      username: username || \"\",\n      password: password || \"\",\n    }\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Cannot be an empty field\"),\n    password: Yup.string().required(\"Cannot be an empty field\")\n  }),\n  handleSubmit(values, { setStatus, resetForm }) {\n    setStatus(values)\n    resetForm()\n  }\n})(LogIn)\n\n\n\nexport default LoginPage;\n*/","map":{"version":3,"sources":["/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/src/components/Login.js"],"names":["React","useState","connect","withRouter","login","Login","props","creds","setCreds","handleChange","e","target","name","value","onSubmit","preventDefault","history","username","password","mapStateToProps","state","loginError"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,uBAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA,oBAEML,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,QAEbM,KAFa;AAAA,QAENC,QAFM;;AAIpB,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,mBACHD,KADG;AAEN,OAACG,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFpB,OAAR;AAID,GALD;;AAOA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;AACAT,IAAAA,KAAK,CAACF,KAAN,CAAYG,KAAZ,EAAmBD,KAAK,CAACU,OAAzB;AACD,GAHD;;AAKA,SACE,0CACE;AAAM,IAAA,QAAQ,EAAEF,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,UAAxB;AAAmC,IAAA,WAAW,EAAC,UAA/C;AAA0D,IAAA,KAAK,EAAEP,KAAK,CAACU,QAAvE;AAAiF,IAAA,QAAQ,EAAER,YAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAA8D,IAAA,KAAK,EAAEF,KAAK,CAACW,QAA3E;AAAqF,IAAA,QAAQ,EAAET,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,CADF;AAWD;;AAED,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,UAAU,EAAED,KAAK,CAACC;AADc,CAAL,CAA7B;;AAIA,eAAenB,OAAO,CACpBiB,eADoB,EAEpB;AAAEf,EAAAA;AAAF,CAFoB,CAAP,CAGbD,UAAU,CAACE,KAAD,CAHG,CAAf;AAQA","sourcesContent":["import React, { useState } from \"react\"\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { login } from '../components/actions'\n\nfunction Login(props) {\n\n  const [creds, setCreds] = useState({})\n\n  const handleChange = e => {\n    setCreds({\n      ...creds,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const onSubmit = e => {\n    e.preventDefault()\n    props.login(creds, props.history)\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"username\" placeholder=\"username\" value={creds.username} onChange={handleChange}></input>\n        <input type=\"password\" name=\"password\" placeholder=\"password\" value={creds.password} onChange={handleChange}></input>\n\n        <button type=\"submit\"> Log In </button>\n      </form>\n\n    </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  loginError: state.loginError\n})\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(withRouter(Login))\n\n\n\n\n/*import React, { useState, useEffect } from 'react'\nimport * as Yup from 'yup'\nimport { Link } from 'react-router-dom'\nimport { Button, Grid } from 'semantic-ui-react'\nimport { Form, Field, withFormik } from 'formik'\n\n\nconst LogIn = ({ errors, touched, status, history }) => {\n\n\n\n  const registerLink = (\n    <Link to='/register' className='register-link'>Register</Link>\n  )\n  return (\n    <>\n      <div className=\"login-container\">\n        <Grid className=\"log-in-form\">\n          <Grid.Column>\n            <h1>Login</h1>\n            <Grid.Column>\n              <Form>\n                <Field\n                  component='input'\n                  type='text'\n                  name='username'\n                  placeholder='User Name'\n                />\n                {touched.username && errors.username && <p className='error'>{errors.username}</p>}\n                <Field\n                  component='input'\n                  type='password'\n                  name='password'\n                  placeholder='Password'\n                />\n                {touched.password && errors.password && <p className='error'>{errors.password}</p>}\n\n                <Button type='submit' content='Login' />\n\n              </Form>\n            </Grid.Column>\n            <p> {registerLink} </p>\n          </Grid.Column>\n        </Grid>\n      </div>\n    </>\n  )\n}\n\nconst LoginPage = withFormik({\n  mapPropsToValues({ username, password }) {\n    return {\n      username: username || \"\",\n      password: password || \"\",\n    }\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Cannot be an empty field\"),\n    password: Yup.string().required(\"Cannot be an empty field\")\n  }),\n  handleSubmit(values, { setStatus, resetForm }) {\n    setStatus(values)\n    resetForm()\n  }\n})(LogIn)\n\n\n\nexport default LoginPage;\n*/"]},"metadata":{},"sourceType":"module"}