{"ast":null,"code":"import _slicedToArray from \"/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/src/components/Registration.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport { Button } from \"semantic-ui-react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst Registration = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        userRegistration = _useState2[0],\n        setUserRegistration = _useState2[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const onSubmit = async data => {\n    if (data.password === data.confirmPassword) {\n      const payload = {\n        'username': data.username,\n        'password': data.password,\n        'email': data.email\n      };\n      console.log(payload);\n      axiosWithAuth().post(\"/users/register\", payload).then(response => {\n        console.log(\"Account registered\", response.data);\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Form, {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Field, {\n    className: \"field\",\n    component: \"input\",\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"User Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Field, {\n    className: \"field\",\n    component: \"input\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Field, {\n    className: \"field\",\n    component: \"input\",\n    type: \"text\",\n    name: \"fullname\",\n    placeholder: \"Full Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"fullname\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Field, {\n    className: \"field\",\n    component: \"input\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"City\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"city\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(Field, {\n    className: \"field\",\n    component: \"input\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email Address\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" Register \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })))) //     <div className='registration-container'>\n  //       <h2>Register</h2>\n  //       <form onSubmit={handleSubmit(onSubmit)}>\n  //         <div className='form-group'>\n  //           <label htmlFor='username'>Username</label>\n  //           <input className='form-control' type='text' name='username' id='username' ref={register({ required: true })} />\n  //           {errors.username && 'A username is required.'}\n  //         </div>\n  //         <div className='form-group'>\n  //           <label htmlFor='email'>Email Address</label>\n  //           <input className='form-control' type='email' name='email' id='email' ref={register({\n  //             required: true, pattern: {\n  //               value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: \"An email address is required.\"\n  //             }\n  //           })} />\n  //           {errors.email && errors.email.message}\n  //         </div>\n  //         <div className='form-group'>\n  //           <label htmlFor='password'>Password</label>\n  //           <input className='form-control' type='password' name='password' id='password' ref={register({ required: true, minLength: 4 })} />\n  //           <label htmlFor='confirmPassword'>Confirm Password</label>\n  //           <input className='form-control' type='password' name='confirmPassword' id='confirmPassword' ref={register({ required: true, minLength: 4 })} />\n  //         </div>\n  //         <div className='form-group'>\n  //           <button className='btn btn-primary' type=\"submit\">Create Account</button>\n  //         </div>\n  //       </form>\n  //     </div>\n  ;\n};\n\nexport default Registration; // function Registration() {\n//   const LogIn = <a href=\"/log-in\">Login</a>;\n//   return (\n//     <>\n//       <div className=\"login-container\">\n//         <h1>Register</h1>\n//         <Form className=\"form\">\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"text\"\n//             name=\"username\"\n//             placeholder=\"User Name\"\n//           />\n//           <br /> <br />\n//           <ErrorMessage name=\"username\" />\n//           <br /> <br />\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//           />\n//           <br /> <br />\n//           <ErrorMessage name=\"password\" />\n//           <br /> <br />\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"text\"\n//             name=\"fullname\"\n//             placeholder=\"Full Name\"\n//           />\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email Address\"\n//           />\n//           <ErrorMessage name=\"email\" />\n//           <p>Already have an account? {LogIn}</p>\n//           <Button type=\"submit\"> Login </Button>\n//           <br /> <br />\n//         </Form>\n//       </div>\n//     </>\n//   );\n// }\n// const FormikRegister = withFormik({\n//   mapPropsToValues({ username, fullname, city, password, email }) {\n//     return {\n//       username: username || \"\",\n//       fullname: fullname || \"\",\n//       city: city || \"\",\n//       password: password || \"\",\n//       email: email || \"\"\n//     };\n//   },\n//   validationSchema: Yup.object().shape({\n//     username: Yup.string().required(\"Please enter a username.\"),\n//     fullname: Yup.string().required(\"Please enter your full name.\"),\n//     city: Yup.string().required(\"Please enter your city.\"),\n//     email: Yup.string().required(\"Please enter your email address.\"),\n//     password: Yup.string()\n//       .min(6, \"Password must be at least 6 chars.\")\n//       .required(\"Password is required.\")\n//   }),\n//   handleSubmit(values, { setStatus, resetForm }) {\n//     console.log(\"This is the data:\", values);\n//     setStatus(values);\n//     resetForm();\n//   }\n// })(Registration);\n// export default FormikRegister;","map":{"version":3,"sources":["/Users/spacecaptain2/Desktop/Lambda/Builds/buildweek-restaurant-passport/Front-End/client/src/components/Registration.js"],"names":["React","useState","useEffect","Link","useForm","axiosWithAuth","Button","withFormik","Form","Field","ErrorMessage","styled","axios","Yup","Registration","props","userRegistration","setUserRegistration","register","handleSubmit","errors","onSubmit","data","password","confirmPassword","payload","username","email","console","log","post","then","response","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport axiosWithAuth from '../utils/axiosWithAuth';\nimport { Button } from \"semantic-ui-react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\n\nconst Registration = (props) => {\n\n  const [userRegistration, setUserRegistration] = useState({});\n  const { register, handleSubmit, errors } = useForm();\n\n  const onSubmit = async data => {\n    if (data.password === data.confirmPassword) {\n\n\n      const payload = {\n        'username': data.username,\n        'password': data.password,\n        'email': data.email\n      }\n\n      console.log(payload)\n\n      axiosWithAuth()\n        .post(\"/users/register\", payload)\n        .then(response => {\n          console.log(\"Account registered\", response.data);\n        })\n        .catch(error => console.log(error));\n    }\n  };\n\n  return (\n    <>\n\n    <div className=\"login-container\">\n        <h1>Register</h1>\n        <Form className=\"form\">\n          <Field\n            className=\"field\"\n            component=\"input\"\n            type=\"text\"\n            name=\"username\"\n            placeholder=\"User Name\"\n          />\n          <br /> <br />\n          <ErrorMessage name=\"username\" />\n          <br /> <br />\n          <Field\n            className=\"field\"\n            component=\"input\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n          <br /> <br />\n          <ErrorMessage name=\"password\" />\n          <br /> <br />\n          <Field\n            className=\"field\"\n            component=\"input\"\n            type=\"text\"\n            name=\"fullname\"\n            placeholder=\"Full Name\"\n          />\n          <br /> <br />\n          <ErrorMessage name=\"fullname\" />\n          <br /> <br />\n          <Field\n            className=\"field\"\n            component=\"input\"\n            type=\"text\"\n            name=\"city\"\n            placeholder=\"City\"\n          />\n          <br /> <br />\n          <ErrorMessage name=\"city\" />\n          <br /> <br />\n          <Field\n            className=\"field\"\n            component=\"input\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email Address\"\n          />\n          <br /> <br />\n          <ErrorMessage name=\"email\" />\n          <br /> <br />\n          \n          <Button type=\"submit\"> Register </Button>\n          <br /> <br />\n        </Form>\n      </div>\n    </>\n\n//     <div className='registration-container'>\n\n//       <h2>Register</h2>\n\n//       <form onSubmit={handleSubmit(onSubmit)}>\n\n//         <div className='form-group'>\n//           <label htmlFor='username'>Username</label>\n//           <input className='form-control' type='text' name='username' id='username' ref={register({ required: true })} />\n//           {errors.username && 'A username is required.'}\n//         </div>\n\n//         <div className='form-group'>\n//           <label htmlFor='email'>Email Address</label>\n//           <input className='form-control' type='email' name='email' id='email' ref={register({\n//             required: true, pattern: {\n//               value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i, message: \"An email address is required.\"\n//             }\n//           })} />\n//           {errors.email && errors.email.message}\n//         </div>\n\n//         <div className='form-group'>\n//           <label htmlFor='password'>Password</label>\n//           <input className='form-control' type='password' name='password' id='password' ref={register({ required: true, minLength: 4 })} />\n//           <label htmlFor='confirmPassword'>Confirm Password</label>\n//           <input className='form-control' type='password' name='confirmPassword' id='confirmPassword' ref={register({ required: true, minLength: 4 })} />\n//         </div>\n\n//         <div className='form-group'>\n//           <button className='btn btn-primary' type=\"submit\">Create Account</button>\n//         </div>\n\n//       </form>\n\n//     </div>\n\n  );\n\n}\n\nexport default Registration;\n\n\n// function Registration() {\n//   const LogIn = <a href=\"/log-in\">Login</a>;\n//   return (\n//     <>\n\n//       <div className=\"login-container\">\n//         <h1>Register</h1>\n//         <Form className=\"form\">\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"text\"\n//             name=\"username\"\n//             placeholder=\"User Name\"\n//           />\n//           <br /> <br />\n//           <ErrorMessage name=\"username\" />\n//           <br /> <br />\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//           />\n//           <br /> <br />\n//           <ErrorMessage name=\"password\" />\n//           <br /> <br />\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"text\"\n//             name=\"fullname\"\n//             placeholder=\"Full Name\"\n//           />\n//           <Field\n//             className=\"field\"\n//             component=\"input\"\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email Address\"\n//           />\n//           <ErrorMessage name=\"email\" />\n//           <p>Already have an account? {LogIn}</p>\n//           <Button type=\"submit\"> Login </Button>\n//           <br /> <br />\n//         </Form>\n//       </div>\n//     </>\n//   );\n// }\n\n// const FormikRegister = withFormik({\n//   mapPropsToValues({ username, fullname, city, password, email }) {\n//     return {\n//       username: username || \"\",\n//       fullname: fullname || \"\",\n//       city: city || \"\",\n//       password: password || \"\",\n//       email: email || \"\"\n//     };\n//   },\n\n//   validationSchema: Yup.object().shape({\n//     username: Yup.string().required(\"Please enter a username.\"),\n//     fullname: Yup.string().required(\"Please enter your full name.\"),\n//     city: Yup.string().required(\"Please enter your city.\"),\n//     email: Yup.string().required(\"Please enter your email address.\"),\n//     password: Yup.string()\n//       .min(6, \"Password must be at least 6 chars.\")\n//       .required(\"Password is required.\")\n//   }),\n\n//   handleSubmit(values, { setStatus, resetForm }) {\n//     console.log(\"This is the data:\", values);\n//     setStatus(values);\n//     resetForm();\n//   }\n// })(Registration);\n\n// export default FormikRegister;\n"]},"metadata":{},"sourceType":"module"}